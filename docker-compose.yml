version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-mouch-knight}
    networks:
      - app
    ports:
      - "127.0.0.1:${POSTGRES_BIND_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.4.2
    ports:
      - "127.0.0.1:${REDIS_BIND_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app
    restart: unless-stopped
    command: redis-server --appendonly yes

  app:
    image: arashidos/mouch-knight-app:${IMAGE_TAG:-dev}
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      options:
        max-size: "12m"
        max-file: "5"
    environment:
      NODE_ENV: production
    networks:
      - app
    restart: unless-stopped
  event-worker:
    image: arashidos/mouch-knight-app:${IMAGE_TAG:-dev}
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: [ "pnpm", "run", "event-worker" ]
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      options:
        max-size: "12m"
        max-file: "5"
    environment:
      NODE_ENV: production
    networks:
      - app
    restart: unless-stopped

  tx-worker:
    image: arashidos/mouch-knight-app:${IMAGE_TAG:-dev}
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: [ "pnpm", "run", "tx-worker" ]
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      options:
        max-size: "12m"
        max-file: "5"
    environment:
      NODE_ENV: production
    networks:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
networks:
  app: